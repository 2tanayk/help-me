## data preprocessing 
import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder,MinMaxScaler,OrdinalEncoder
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import classification_report,confusion_matrix,ConfusionMatrixDisplay
import warnings
warnings.filterwarnings('ignore')

data=pd.read_csv("prepro.csv");


x=data.iloc[:,:-1].values
y=data.iloc[:,-1].values

#fill null values
data['Age']=data['Age'].fillna(data['Age'].mean())
data['Salary']=data['Salary'].fillna(data['Salary'].mean())


#label encoding and ordinal encoding

from sklearn import preprocessing

label_encoder=preprocessing.LabelEncoder()
data['Purchased']=label_encoder.fit_transform(data['Purchased'])

data2=pd.read_csv('cars.csv')

print(data2['transmission'].unique())
print(data2['owner'].unique())

from sklearn.preprocessing import LabelEncoder,OrdinalEncoder

le=LabelEncoder()
data2['transmission']=le.fit_transform(data2['transmission'])
oe=OrdinalEncoder(categories=[['Test Drive Car','First Owner','Second Owner','Third Owner','Fourth & Above Owner']], dtype=int)
data2[['owner']] = oe.fit_transform(data2[['owner']])

from sklearn.preprocessing import MinMaxScaler

for col in data2:
    mx=MinMaxScaler()
    data2[col]=mx.fit_transform(data2[[col]])
    
mms = MinMaxScaler()

scaler = MinMaxScaler()
X_train[['Age','Balance']] = scaler.fit_transform(X_train[['Age','Balance']])
X_test[['Age','Balance']] = scaler.transform(X_test[['Age','Balance']])
X_train



dataset = pd.get_dummies(dataset,columns = ['Geography'])
dataset



